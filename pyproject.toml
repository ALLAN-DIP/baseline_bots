[build-system]
requires = ["setuptools>=62.6"] # Minimum version required to use `file:` with `install_requires`
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ["py37"]

[tool.codespell]
ignore-regex = "\\[nt]" # Do not count escaped newlines or tabs as part of a word
ignore-words-list = "astroid,ans,hel,opps,ser,vie"  # "HEL", "SER", and "VIE" are from DAIDE
quiet-level = 0 # Display all warnings
check-filenames = ""
check-hidden = ""

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
python_version = "3.7"
strict = true
warn_unreachable = true

[tool.ruff]
fix = true
line-length = 100
target-version = "py37"

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
  "B", # flake8-bugbear
  # "D", # pydocstyle
  "E", # pycodestyle error
  "F", # pyflakes
  "I", # isort
  "PTH", # flake8-use-pathlib
  "UP", # pyupgrade
  "W", # pycodestyle warning
]
ignore = [
  # Do not switch to `Path.open()` because `open()` is easier to test with
  # e.g., `open(data_dir / "file_a.txt")` -> `open("test/file_b.txt")`
  "PTH123", # builtin-open (from flake8-use-pathlib)
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["baseline_bots"]

[tool.ruff.lint.pycodestyle]
# Detect extra-long lines that Black can't handle
max-line-length = 250

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pylint.format]
# Let other tools handle line length
max-line-length = 250

[tool.pylint.imports]
# Need to either set this or stop using the `import X as X` that mypy wants
allow-reexport-from-package = true

[tool.pylint.messages_control]
# Most of these are disabled to prevent issues with dependencies being difficult to inspect
# pylint FAQ recommends disabling:
# - `wrong-import-order` when using `isort`
# - `missing-module-docstring`, `missing-class-docstring`,
#   `missing-function-docstring` when using `pydocstyle`
# Disabled `consider-using-f-string` because handled by `pyupgrade`
disable = """
R,fixme,no-member,unsupported-membership-test,unsubscriptable-object,
unsupported-assignment-operation,not-an-iterable,too-many-lines,wrong-import-order,
missing-module-docstring,missing-class-docstring,missing-function-docstring,
consider-using-f-string
"""

[tool.pylint.reports]
score = false

[tool.pytest.ini_options]
addopts = "--verbosity=2"
filterwarnings = [
  "ignore::DeprecationWarning",
]
